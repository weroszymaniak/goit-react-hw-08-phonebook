{"version":3,"file":"static/js/838.7b507693.chunk.js","mappings":"2MAGaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EACpBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAAnB,EACvBC,EAAc,SAAAN,GAAK,OAAIA,EAAMC,SAASM,KAAnB,E,SCLhC,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4B,SCqDhI,EAlDoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAUC,SAbR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAETC,EAAa,CACjBC,KAAML,EAAEG,OAAOG,SAASD,KAAKE,MAC7BC,OAAQR,EAAEG,OAAOG,SAASE,OAAOD,OAEnCZ,GAASc,EAAAA,EAAAA,IAAWL,IACpBF,EAAKQ,OACN,EAGC,WACE,mBAAOb,UAAWC,EAAlB,UAA6B,QAE3B,kBACED,UAAWC,EACXa,KAAK,OACLN,KAAK,OAGLO,MAAM,yIACNC,UAAQ,QAIZ,mBAAOhB,UAAWC,EAAlB,UAA6B,UAE3B,kBACED,UAAWC,EACXa,KAAK,MACLN,KAAK,SAGLO,MAAM,+FACNC,UAAQ,QAIZ,mBAAQhB,UAAWC,EAAYa,KAAK,SAApC,SAA6C,kBAKlD,ECnDD,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4BCwC3F,EAnCoB,WAClB,IAAMvB,GAAW0B,EAAAA,EAAAA,IAAY5B,GACvBI,GAASwB,EAAAA,EAAAA,IAAYzB,GACrB0B,EAAmB3B,EAASE,QAAO,SAAA0B,GAAO,OAC9CA,EAAQX,KAAKY,cAAcC,SAAS5B,EAAO2B,cADG,IAG1CtB,GAAWC,EAAAA,EAAAA,MAQjB,OADAuB,QAAQC,IAAI,uBAAwBhC,IAElC,eAAIS,UAAWC,EAAf,SACGiB,EAAiBM,KAAI,SAAAL,GAAO,OAC3B,gBAAInB,UAAWC,EAAf,UACGkB,EAAQX,KAAO,KAAOW,EAAQR,QAE7B,mBACEX,UAAWC,EACXa,KAAK,SACLN,KAAK,SACLiB,QAAS,kBAjBAC,EAiBmBP,EAAQO,GAhB9CJ,QAAQC,IAAI,4BAA6BG,QAEzC5B,GAAS6B,EAAAA,EAAAA,IAAcD,IAHJ,IAAAA,CAiBA,EAJX,SAKC,aARyBP,EAAQO,GADX,KAiBlC,ECtCD,EAAwB,sBAAxB,EAA0D,0BAA1D,EAA2F,qB,UC2B3F,MArBA,WACE,IAAMhB,GAAQO,EAAAA,EAAAA,IAAYzB,GACpBM,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAwB,2BACxB,kBACED,UAAWC,EACXa,KAAK,OACLJ,MAAOA,EACPkB,SAZiB,SAAAzB,GACrB,IAAM0B,EAAY1B,EAAEG,OAAOI,MAAMU,cACjCE,QAAQC,IAAI,eAAgBpB,EAAEG,OAAOI,OACrCZ,GAASgC,EAAAA,EAAAA,GAAaD,GACvB,MAYF,EClBc,SAASE,IACtB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXJ,GAAYsB,EAAAA,EAAAA,IAAYvB,GACxBG,GAAQoB,EAAAA,EAAAA,IAAYrB,GAM1B,OAJAoC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,4BACE,wBAAI,eACJ,SAAC,EAAD,IACCH,IAAcE,IAAS,uBAAG,4BAE3B,wBAAI,cACJ,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// export const getContacts = state => state.contacts;\n// export const getFilter = state => state.filter;\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const newContact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          // value={name}\n          // onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          // value={number}\n          // onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import React from 'react';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  const dispatch = useDispatch();\n  const handleRemove = id => {\n    console.log('Deleting contact with ID:', id);\n\n    dispatch(removeContact(id));\n  };\n\n  console.log('making contacts list', contacts);\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(contact => (\n        <li className={css.item} key={contact.id}>\n          {contact.name + ': ' + contact.number}\n          {\n            <button\n              className={css.button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => handleRemove(contact.id)}\n            >\n              delete\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"container\":\"Filter_container__L5eml\",\"call\":\"Filter_call__Z1MR5\"};","import React from 'react';\nimport css from './Filter.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { filterChange } from 'redux/filterSlice';\n\nfunction Filter() {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onFilterChange = e => {\n    const newFilter = e.target.value.toLowerCase();\n    console.log('thats filter', e.target.value);\n    dispatch(filterChange(newFilter));\n  };\n  return (\n    <div className={css.container}>\n      <p className={css.call}>Find contacts by name</p>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={value}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","target","newContact","name","elements","value","number","addContact","reset","type","title","required","useSelector","filteredContacts","contact","toLowerCase","includes","console","log","map","onClick","id","removeContact","onChange","newFilter","filterChange","Contacts","useEffect","fetchContacts"],"sourceRoot":""}